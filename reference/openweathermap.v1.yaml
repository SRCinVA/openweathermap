openapi: 3.0.0
info:
  title: openweathermap
  version: '1.0'
  contact:
    name: Support
    email: srcgithub@gmail.com
    url: 'https://openweathermap.org/api'
  termsOfService: 'https://openweathermap.org/terms'
  license:
    name: CC Attribution-ShareAlike 4.0 (CC BY-SA 4.0)
    url: 'https://openweathermap.org/price'
  description: "Get the current weather, daily forecasts for 16 days, and a three-hour-interval forecast for 5 days for your city. Helpful stats, graphics, and \"this day in history\" charts are available for your reference. Interactive maps show precipitation, clouds, pressure, and wind around your location's stations. Data is available in JSON, XML, or HTML format. **Note**: This sample Swagger file covers the 'current' endpoint only from the OpenWatherMap API. <br/><br/> **Note**: all parameters are optional, but you must select at least one parameter. Calling the API by city ID (using the 'id' parameter) will provide the most precise location results."
servers:
  - url: 'https://api.openweathermap.org/data/2.5'
    description: prod
paths:
  /weather:
    get:
      summary: weather
      tags:
        - Weather endpoints
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  coord:
                    type: object
                    properties:
                      lon:
                        type: number
                      lat:
                        type: number
                  cod:
                    type: number
                  name:
                    type: string
                  id:
                    type: number
                  timezone:
                    type: number
              examples: {}
            application/xml:
              schema:
                type: object
                properties:
                  coord:
                    type: object
                    properties:
                      log:
                        type: number
                        description: 'City geo location, longitude'
                      lat:
                        type: number
                        description: 'City geo location, latitude'
                  cod:
                    type: number
                    description: Internal parameter
                  name:
                    type: string
                    description: Name
                  id:
                    type: number
                    description: City ID
                  timezone:
                    type: number
                    description: The timezone for the station
                  sys:
                    type: object
                    properties:
                      type:
                        type: number
                        description: Internal parameter
                      id:
                        type: number
                        description: Internal parameter
                      country:
                        type: string
                        description: 'Country code (GB, JP, etc.)'
                      sunrise:
                        type: number
                        description: 'Sunrise time, unix, UTC'
                      sunset:
                        type: number
                        description: 'Sunset time, unix, UTC'
                  dt:
                    type: number
                    description: 'time of data calculation, unix, UTC'
                  clouds:
                    type: object
                    properties:
                      all:
                        type: number
                  wind:
                    type: object
                    properties:
                      speed:
                        type: number
                      deg:
                        type: number
                  visibility:
                    type: number
                  main:
                    type: object
                    properties:
                      temp:
                        type: number
                        description: temperature (in Fahrenheit or Celsius)
                      feels_like:
                        type: number
                        description: wind chill (in Fahrenheit or Celsius)
                      temp_min:
                        type: number
                        description: low temperature (in Fahrenheit or Celsius)
                      temp_max:
                        type: number
                        description: high temperature (in Fahrenheit or Celsius)
                      pressure:
                        type: number
                        description: atmospheric pressure (in millibars)
                      humidity:
                        type: number
                        description: humidity (in percentage)
                  base:
                    type: string
                  weather:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        main:
                          type: string
                        description:
                          type: string
                        icon:
                          type: string
      operationId: get-weather
      description: |-
        Access current weather data for any location including over 200,000 cities. Current weather is frequently updated based on global models and data from more than 40,000 weather stations
        Data is available in JSON, XML, or HTML format. Available for both Free and paid subscriptions
      parameters:
        - schema:
            type: string
          in: query
          name: zip
          description: '**Zip code**. Search by zip code. *Example 95050,us* Please note that if the country is not specified, the search uses USA as a default.   '
        - schema:
            type: string
          in: query
          name: units
          description: "*Example: imperial*. Possible values: 'standard', 'metric', and 'imperial'. When you do not use the 'units' parameter, the format is 'standard' by default."
        - schema:
            type: string
          in: query
          name: id
          description: "**City ID**. *Example: '2172797'*. You can call by city ID. The API responds with the exact result. The List of city IDs can be downloaded here. You can include multiple cities in this parameter --just separate them by commas. The limit of locations is 20. **Note: A single ID counts as one API call."
        - schema:
            type: string
          in: query
          name: lat
          description: '**Latitude**. *Example: 35* The latitude coordinate of the location of interest. Must use with lon.'
        - schema:
            type: string
          in: query
          name: lon
          description: |
            **Longitude**. *Example: 139*. Longitude coordinate of the location of interest. Must use with lat.
        - schema:
            type: string
          in: query
          name: lang
          description: "**Language**. *Example:en* You can use the lang parameters to get the output in your own language. We support the following languages that you can use with the corresponding lang values: Arabic - 'ar', Bulgarian - 'bg', Catalan - 'ca', Czech - 'cz', German - 'de', Greek - 'el', English - 'en', Persian (Farsi) - 'fa', Finnish - 'fi', French - 'fr', Galician - 'gl', Croatian - 'hr', Hungarian - 'hu', Itaian - 'it', Japanese - 'ja', Korean - 'kr', Latvian - 'la', Lithuanian - 'lt', Macedonian - 'mk', Dutch - 'nl', Polish - 'pl', Portuguese - 'pt', Romanian - 'ro', Russian - 'ru', Swedish - 'se', Slovak - 'sk', Slovenian - 'sl', Spanish - 'es', Turkish - 'tr', Ukrainian - 'ua', Vietnamese - 'vi', Chinese Simplified - 'zh-cn', Chinese Traditional - 'zh-tw' default: \"en\""
        - schema:
            type: string
          in: query
          name: mode
          description: "**Mode**. *Example: html* Determines the format of the response. Possible values are 'json', 'xml', and 'html'. If the mode parameter is empty, the format is 'json' by default. 'default: \"json\"' 'enum: \"json\", \"xml\", \"html\"'"
        - schema:
            type: string
          in: query
          name: q
          description: '*Example: London*. You can call by city name, or by city name and country code. The API responds with a list of results that match a seaching word. For the query value, type the city name and optionally the country code divided by a comma; use ISO 3166 country codes.'
      requestBody: {}
    parameters: []
components:
  schemas: {}
  securitySchemes:
    app_id:
      name: appid
      type: apiKey
      in: query
